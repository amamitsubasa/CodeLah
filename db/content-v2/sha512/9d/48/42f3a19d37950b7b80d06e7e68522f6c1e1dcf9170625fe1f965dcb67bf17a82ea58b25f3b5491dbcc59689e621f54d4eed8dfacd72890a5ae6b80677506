{"_id":"com.unity.inputsystem","name":"com.unity.inputsystem","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","provider":"upm","dist-tags":{"latest":"1.9.0"},"versions":{"1.9.0":{"_upm":{"changelog":"### Changed\n- Added warning messages to both `OnScreenStick` and `OnScreenButton` Inspector editors that would display a warning message in case on-screen control components are added to a `GameObject` not part of a valid UI hierarchy.\n- Changed behavior for internal feature flag relating to Windows Gaming Input to be ignored on non-supported platforms.\n- Changed `DualSenseHIDInputReport` from internal to public visibility\n\n### Fixed\n- Avoid potential crashes from `NullReferenceException` in `FireStateChangeNotifications`.\n- Fixed cases where `wasPressedThisFrame` would not return true if a press and release happened within the same frame before being queried (and vice versa for `wasReleasedThisFrame`).\n- Fixed an issue where a composite binding would not be consecutively triggered after ResetDevice() has been called from the associated action handler [ISXB-746](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-746).\n- Fixed resource designation for \"d_InputControl\" icon to address CI failure.\n- Fixed an issue where a composite binding would not be consecutively triggered after disabling actions while there are action modifiers in progress [ISXB-505](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-505).\n- Fixed prefabs and missing default control scheme used by PlayerInput component are now correctly shown in the inspector [ISXB-818](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-818).\n- Fixed error thrown when Cancelling Control Scheme creation in Input Actions Editor.\n- Fixed Scheme Name in Control Scheme editor menu that gets reset when editing devices [ISXB-763](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-763).\n- Fixed an issue where `InputActionAsset.FindAction(string, bool)` would throw `System.NullReferenceException` instead of returning `null` if searching for a non-existent action with an explicit action path and using `throwIfNotFound: false`, e.g. searching for \"Map/Action\" when `InputActionMap` \"Map\" exists but no `InputAction` named \"Action\" exists within that map [ISXB-895](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-895).\n- Fixed scroll speed being slower when using InputSystemUIInputModule instead of StandaloneInputModule. (https://jira.unity3d.com/browse/ISXB-771)\n- Fixed an issue where adding a `OnScreenButton` or `OnScreenStick` to a regular GameObject would lead to exception in editor.\n- Fixed an issue where adding a `OnScreenStick` to a regular GameObject and entering play-mode would lead to exceptions being generated.\n- Fixed InputActionReference issues when domain reloads are disabled [ISXB-601](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-601), [ISXB-718](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-718), [ISXB-900](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-900)\n- Fixed a performance issue with many objects using multiple action maps [ISXB-573](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-573).\n- Fixed an variable scope shadowing issue causing compilation to fail on Unity 2019 LTS.\n- Fixed an issue where changing `InputSettings` instance would not affect associated feature flags.\n- Submit and Cancel UI actions will now respect configured interactions. [ISXB-841](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-841).\n- Fixed the UI generation of enum fields when editing interactions of action properties. The new selected value was lost when saving.\n- Fixed the UI generation of custom interactions of action properties when it rely on OnGUI callback. [ISXB-886](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-886).\n- Fixed deletion of last composite part raising an exception. [ISXB-804](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-804)\n- Fixed an issue related to Visualizers sample where exceptions would be thrown by InputActionVisualizer and InputControlVisualizer when entering play-mode if added as components to a new `GameObject`.\n- Fixed an issue with InputAction Asset editor where invalid ControlScheme names with only spaces could be entered. [ISXB-547](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-547).\n\n### Added\n- Added additional device information when logging the error due to exceeding the maximum number of events processed\n  set by `InputSystem.settings.maxEventsBytesPerUpdate`. This additional information is available in development builds\n  only.\n- Fixed deletion of last composite part raising an exception. [ISXB-804](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-804)\n- Expanded editor and build insight analytics to cover ``.inputactions` asset editor usage, `InputSettings` and common component configurations.\n\n### Changed\n- Changed `DualSenseHIDInputReport` from internal to public visibility\n- Added Input Setting option allowing to keep platform-specific scroll wheel input values instead of automatically converting them to a normalized range."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"bfd489f1c56945be2e246dc9df35cb636c99cc98"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"73feff4267461a868fdfc3fa43f112de1f5312c1"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.9/manual/index.html","name":"com.unity.inputsystem","version":"1.9.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"4c821b62f24c1485f7476242f03772aaa7a79f1d","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.9.0.tgz"}},"1.8.2":{"_upm":{"changelog":"### Added\n- Additional tests for UI Input default actions (Navigate, Submit, Scroll etc.)\n\n### Fixed\n- Fixed an issue where UI interactions would not function without setting up a project-wide actions asset in Project Settings. Default UI actions are now created on the fly, if no asset for project-wide actions has been set. [ISXB-811](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-811).\n- Physical keyboards used on Android/ChromeOS could have keys \"stuck\" reporting as pressed after a long press and release [ISXB-475](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-475).\n- NullReferenceException thrown when right-clicking an empty Action Map list in Input Actions Editor windows [ISXB-833](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-833).\n- Fixed an issue where `System.ObjectDisposedException` would be thrown when deleting the last ActionMap item in the Input Actions Asset editor.\n- Fixed DualSense Edge's vibration and light bar not working on Windows\n- Fixed Project-wide Actions asset failing to reload properly after deleting project's Library folder.\n- Fixed an issue where `System.InvalidOperationException` is thrown when entering PlayMode after deleting an ActionMap from Project-wide actions and later resetting it.\n- Fixed Input Actions Editor window resource leak that could result in unexpected exceptions [ISXB-865](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-865).\n- Fixed an issue where UI integration would throw exceptions when Project-wide Input Actions asset did not contain the implicitly required `UI` action map or was missing any of the required actions. Additionally this fix now also generates warnings in the console for any divergence from expected action configuration or lack of bindings in edit-mode.\n\n### Changed\n- For Unity 6.0 and above, when an `EventSystem` GameObject is created in the Editor it will have the\n`InputSystemUIInputModule` by default if the Input System package is installed and enabled."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"dfcdb250b15c1691d105f3bfe62fcc7d55352fac"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"ea78ad9a0d8809879718f3d850572097f3f5a7f4"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html","name":"com.unity.inputsystem","version":"1.8.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"2e301545be76611bf3e328b5c47097d3838f0434","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.8.2.tgz"}},"1.8.1":{"_upm":{"changelog":"### Fixed\n- NullReferenceException thrown when editing a binding path in InputActionAsset windows."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"5f49c88a401e0847f4d871959d67d7cd0fe6a90b"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"4412578426d34b7b2a0ef17db295e39e7e26b2fa"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html","name":"com.unity.inputsystem","version":"1.8.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"4e7a2600d63ce61a1061d33a81ac627f4961df7a","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.8.1.tgz"}},"1.8.0-pre.2":{"_upm":{"changelog":"### Changed\n- Removed icons from action map list as these were always the same and the icon was placeholder\n- Input asset editor now switched to use UI Toolkit which matches the project wide input actions editor interface.\n- Changed [`InputActionProperty`](xref:UnityEngine.InputSystem.InputActionProperty) property drawer to be more compact. Use the More menu (`⋮`) button to open a dropdown menu and select between Use Reference and Use Action.\n- Static analysis warnings regarding flag enums have been suppressed in order to avoid compile-time warnings or errors.\n- Action Map and Action Tree views of the UI Toolkit based Input Action Editor now prevents deselection in both views when Escape key is pressed.\n- Input Action Asset editors Auto-save feature has been modified to trigger on focus-lost when activated instead of triggering on every modification to the asset in order to reduce impact of processing required to handle modified assets.\n- Project-wide input actions template extension changed from .inputactions to .json. This avoids showing template actions in the action's selector UI that are not intended to be used.\n- Re-enabled some UI tests that were disabled on iOS.\n- Reorganized package Project Settings so that \"Input System Package\" setting node contains \"Input Actions\" and \"Settings\" becomes a child node when Project-wide Actions are available. For Unity versions where Project-wide Actions are not available, the settings structure remains unchanged.\n- Make Project-wide Actions the default actions for Player Input.\n\n### Added\n- Support for [Game rotation vector](https://developer.android.com/reference/android/hardware/Sensor#TYPE_GAME_ROTATION_VECTOR) sensor on Android\n- Duplicate Input Action Items in the new Input Action Asset Editor with Ctrl+D (Windows) or Cmd+D (Mac)\n- Selection of InputActionReferences from project-wide actions on fields that are of type InputActionReference. Uses a new advanced object picker that allows better searching and filtering of actions.\n- Reset project wide Input Settings to default via a new Kebab-menu in Input System Project Settings.\n\n### Fixed\n- Partially fixed case ISX-1357 (Investigate performance regressing over time).  A sample showed that leaving an InputActionMap enabled could lead to an internal list of listeners growing.  This leads to slow-down, so we now warn if we think this is happening.\n- UI fix for input fields in interactions: they are wider now and the width is fixed.\n- Fixed exiting empty input fields for actions, action maps and composites in the input action asset editor.\n- Fixed an issue where selecting an Action in the Input Action Asset Editor tree-view and then pressing ESC to unselect would throw an `InvalidOperationException`.\n- Fixed an issue where selecting an Action Map in the Input Action Asset Editor list and then pressing ESC to unselect would print an `NullReferenceException` to the Debug console.\n- Fixed case [ISXB-251](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-251) (Action only calls started & performed callbacks when control type is set to Vector3Composite). `EvaluateMagnitude` wasn't overridden for Vector3Composite, also made some minor changes to Vector3Composite and Vector2Composite for consistency.\n- Fixed case [ISXB-580](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-580) (UI Submit / Cancel not working with Switch Pro controller) by adding \"Submit\" & \"Cancel\" usages to the Switch Pro controller input controls.\n- Fixed an issue where undoing deletion of Action Maps did not restore Actions correctly.\n- Fixed case [ISXB-628](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-628) (OnIMECompositionChange does not return an empty string on accept when using Microsoft IME) by clarifying expectations and intended usage for the IME composition change event.\n- Fixed issue where the expanded/collapsed state of items in the input action editor was not properly saved between rebuilds of the UI.\n- Fixed issue where The Profiler shows incorrect data and spams the console with \"Missing Profiler.EndSample\" errors when there is an Input System Component in Scene).\n- Fixed an issue where undoing duplications of action maps caused console errors.\n- Fix for BindingSyntax `WithInteraction()` which was incorrectly using processors.\n- Fix for UITK Input Action Editor binding 'Listen' button which wasn't working in the case for Control Type 'Any'.\n- Fixed issue of visual elements being null during editing project-wide actions in project settings which prompted console errors.\n- Fixed case ISX-1436 (UI TK Input Action Asset Editor - Error deleting Bindings with DeleteKey on Windows).\n- Fixed issue with UI Toolkit based Input Action Editor not restoring it's selected items after Domain Reload.\n- Fixed the [`GetHapticCapabilitiesCommand`](xref:UnityEngine.InputSystem.XR.Haptics.GetHapticCapabilitiesCommand) always failing to execute due to a mismatch in the size in bytes of the payload and the size expected by XR devices. Changed [`HapticCapabilities`](xref:UnityEngine.InputSystem.XR.Haptics.HapticCapabilities) to include all properties returned by the XR input subsystem. This makes Input System match the functionality provided by the [XR](https://docs.unity3d.com/Manual/com.unity.modules.xr.html) module's [`InputDevice.TryGetHapticCapabilities`](https://docs.unity3d.com/ScriptReference/XR.InputDevice.TryGetHapticCapabilities.html) and [`HapticCapabilities`](https://docs.unity3d.com/ScriptReference/XR.HapticCapabilities.html)."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"309d2b5685b706092cdc377bb5e58d84e26cb6a5"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"f1497f44f42bffec269b9e70a38679d4723679ab"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html","name":"com.unity.inputsystem","version":"1.8.0-pre.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"c53f638ef5c66feefdbb60b337ec294ffbc5c29c","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.8.0-pre.2.tgz"}},"1.8.0-pre.1":{"_upm":{"changelog":"### Added\n- Initial version of Project Wide Actions for pre-release (`InputSystem.actions`). This feature is available only on Unity Editor versions 2022.3 and above and can be modified in the Project Settings.\n\n### Fixed\n- Fixed device selection menu not responding to mouse clicks when trying to add a device in a Control Scheme ([case ISXB-622](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-622))."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"b806f0ed58702789b4243f7f6ab8f5cdc912a70e"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"a830638e9d6e7241df4e710ccd65d5dbbe809f90"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html","name":"com.unity.inputsystem","version":"1.8.0-pre.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"6ea5277838814b013533393962783bf130aa4835","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.8.0-pre.1.tgz"}},"1.8.0":{"_upm":{"changelog":"### Changed\n- From 2023.2 forward: UI toolkit now uses the \"UI\" action map of project-wide actions as their default input actions. Previously, the actions were hardcoded and were based on `DefaultInputActions` asset which didn't allow user changes. Also, removing bindings or renaming the 'UI' action map of project wide actions will break UI input for UI toolkit.\n- Changed the 'Max player count reached' error to a warning instead.\n- Removed \"Input Actions\" title from UI-Toolkit Input Action Editor when used in a window and not embedded in Project Settings.\n- Moved project wide input action storage over to an Asset to avoid issues with multiple assets in a single project settings file.\n- Migrate any project-wide input actions found in the InputManager.asset file to a new InputSystem_Actions.inputactions asset file.\n- `InputSystem.actions` may now only be assigned in edit-mode. Any attempt to assign `InputSystem.actions` during play-mode will generate an exception.\n- `InputSystem.actions` may now only be assigned a persisted `InputActionAsset` instance since in-memory objects can anyway not be included in a player build. This now generates an `ArgumentException` when attempting to assign a non-persisted object.\n- Project Settings embedded Input Action Editor will now disallow selecting the Project-wide Actions asset during play-mode. The option is only available in edit-mode.\n- The \"Assign as the Project-wide Input Actions\" option visible in the Inspector when selecting an .inputactions asset that is not the current Project-wide Input Actions Asset is now disabled in play-mode.\n\n### Added\n- Added new methods and properties to [`InputAction`](xref:UnityEngine.InputSystem.InputAction):\n  - [`InputAction.activeValueType`](xref:UnityEngine.InputSystem.InputAction.activeValueType) returns the `Type` expected by `ReadValue<TValue>` based on the currently active control that is driving the action.\n  - [`InputAction.GetControlMagnitude`](xref:UnityEngine.InputSystem.InputAction.GetControlMagnitude) returns the current amount of actuation of the control that is driving the action.\n  - [`InputAction.WasCompletedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasCompletedThisFrame) returns `true` on the frame that the action stopped being in the performed phase. This allows for similar functionality to [`WasPressedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasPressedThisFrame)/[`WasReleasedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasReleasedThisFrame) when paired with [`WasPerformedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasPerformedThisFrame) except it is directly based on the interactions driving the action. For example, you can use it to distinguish between the button being released or whether it was released after being held for long enough to perform when using the Hold interaction.\n- Added Copy, Paste and Cut support for Action Maps, Actions and Bindings via context menu and key command shortcuts.\n- Added Dual Sense Edge controller to be mapped to the same layout as the Dual Sense controller\n- Added drag and drop support in the Input Action Asset Editor for Action Maps, Actions and Bindings.\n- UI Toolkit input action editor now supports showing the derived bindings.\n- Device filtering support for control schemes in the UI-Toolkit Input Asset Editor.\n- Added right-click (context) menu support for empty areas below the Action Maps/Actions lists in the Project Settings Input Action Editor and Asset Input Action Editor.\n- Added text to show which action map asset was used to create each action in the Input Debug window.\n\n### Fixed\n- Fixed syntax of code examples in API documentation for [`AxisComposite`](xref:UnityEngine.InputSystem.Composites.AxisComposite).\n- Fixed missing confirmation popup when deleting a control scheme.\n- Fixed support for menu bar/customisable keyboard shortcuts used when interacting with Actions and Action Maps.\n- Fixed add bindings button to support left button click.\n- Fixed icon for adding bindings and composites button.\n- Fixed Documentation~/filter.yml GlobalNamespace rule removing all API documentation.\n- Fixed `Destroy may not be called from edit mode` error [ISXB-695](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-695)\n- Fixed possible exceptions thrown when deleting and adding Action Maps.\n- Fixed selection not changing when right-clicking an Action Map or Action in the Project Settings Input Actions Editor.\n- Fixed right-click context menus throwing errors when dealing with multiple Input Actions Editor windows.\n- Fixed potential race condition on access to GCHandle in DefferedResolutionOfBindings and halved number of calls to GCHandle resolution [ISXB-726](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-726)\n- Fixed issue where composite part dropdown manipulates binding path and leaves composite part field unchanged.\n- Fixed lingering highlight effect on Save Asset button after clicking.\n- Fixed missing name in window title for Input Action assets.\n- Fixed showing action properties view when there were no actions.\n- Fixed \"Listen\" functionality for selecting an input sometimes expecting the wrong input type.\n- Fixed console errors that can be produced when opening input package settings from the Inspector.\n- Fixed InputManager.asset file growing in size on each Reset call.\n- Fixed Opening InputDebugger throws 'Action map must have state at this point' error.\n- Fixed Cut/Paste behaviour to match Editor - Cut items will now be cleared from clipboard after pasting.\n- Improved window layout to avoid elements being hidden (both the Input Actions in Project Settings, and standalone Input Actions Editor windows).\n- Fixed InputAction asset appearing dirty after rename [ISXB-749](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-749).\n- Fixed Error logged when InputActionsEditor window opened without a valid asset.\n- Fixed ArgumentNullExceptions thrown when deleting items quickly in the UITK Editor.\n- Fixed Project Settings header title styling for Input Actions editor.\n- Fixed Input Actions Editor losing reference to current ControlScheme upon entering Play Mode [ISXB-770](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-770).\n- Fixed Save shortcut (ctrl/cmd + S by default) not saving changes in Input Actions Editor windows. [ISXB-659](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-659).\n- Fixed headers in InputActionsEditor windows becoming squashed when there is a large number of Action Maps/Actions.\n- Fixed duplication of project wide input actions when loading/unloading scenes.\n- Fixed an issue where UI Toolkit based editor would not close itself if the associated asset would be deleted (To mimic IMGUI Input Action Editor behavior).\n- Fixed a regression in IMGUI Input Action Editor where editor would auto-save on focus lost even when the auto-save toggle was disabled.\n- Fixed an issue where UI Toolkit based editor would not properly track tentative changes associated with a moved asset file.\n- Fixed an issue where selection state of UI Toolkit editor state would not be preserved when associated with a new serialized copy of the asset.\n- Fixed an issue where any exceptions throw from within UI Toolkit event queue would only log the error message and not the full exception stack trace, making debugging more difficult.\n- Fixed an issue where UI Toolkit Input Actions Editor wouldn't provide a correct modification state when coming back from domain reload.\n- Fixed an issue in the Input Actions Editor window where entries being cut would be deleted instantly and not after being pasted.\n- Fixed an issue where preloaded InputActionAsset objects added by a Unity developer could accidentally be selected as the project-wide actions asset instead of the configured asset in built players.\n- Fixed a compile-time warning: `warning CS0109: The member 'UnityRemoteTestScript.camera' does not hide an accessible member. The new keyword is not required.` showing up in the Console window when building a player including the Input System Unity Remote sample.\n- Fixed an issue where the InputActionAsset editor window would remove the unsaved changes asterisk when cancelling the window. [ISXB-797](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-797).\n- Fixed an issue in the Input Actions Editor window where deleting items unfolded other actions or the selection switched unintended.\n- Fixed Composite types missing in context menu when \"Any\" ControlType selected. [ISXB-769](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-769).\n- Fixed 3D Vector and 1D Axis binding dropdown usage in Input Actions Editor throwing NotImplementedExceptions.\n- Fixed several missing tooltips from the Action/Binding Properties pane in Input Actions Editor.\n- Fixed an issue in the InputActionAsset Editor where ControlType wasn't updated when ActionType changed.\n- Fixed an issue in the InputActionAsset Editor where Canceling ControlScheme changes didn't reset the values in the UI.\n- Fixed an issue where newly created action map names were not editable.\n- Fixed an issue where having unsaved changes in `InputActionsEditorWindow` would be discarded when entering play-mode (or triggering domain reload in general).\n- Fixed an issue where a `InputActionsEditorWindow` would not find an existing open editor window if the editor was open during a domain reload and then the asset was opened from the Project Explorer.\n- Fixed a visual glitch in the InputActionAsset Editor when scrolling the Actions list with a rename in progress. [ISXB-748](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-748)\n- Fixed ProjectWideActions template so Previous/Next Actions are Button instead of Axis.\n- Fixed an issue in the Input Action Editor window where entries being cut would be deleted instantly and not after being pasted.\n- Fixed an issue in the Input Action Editor window where deleting items unfolded other actions or the selection switched unintended.\n- Fixed an issue where InputActionAsset validation where not triggered for Project-wide input actions when the project-wide asset was edited in a regular windowed Input Action Asset editor window.\n- Fixed incorrect documentation in InputSystem.actions and InputSystem.onActionsChanged property API contract.\n- Fixed an issue where `InputSystem.actions` could be incorrectly evaluated if the associated asset was deleted."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"74724be0c6bb4bb2e2a25af7f7c8dcb0318dc3c6"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"c21ca7ef6555bc4502b008bd3f55704eeee93a80"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html","name":"com.unity.inputsystem","version":"1.8.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"653601ff17bd7b012631709cd6133a108b5a306b","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.8.0.tgz"}},"1.7.0":{"_upm":{"changelog":"### Added\n- Preliminary support for visionOS.\n- Show a list of `Derived Bindings` underneath the Binding Path editor to show all controls that matched.\n\n### Changed\n- Changed the `InputAction` constructors so it generates an ID for the action and the optional binding parameter. This is intended to improve the serialization of input actions on behaviors when created through API when the property drawer in the Inspector window does not have a chance to generate an ID.\n\n### Fixed\n- Fixed missing prefab errors in InputDeviceTester project ([case ISXB-420](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-420)).\n- Fixed serialization migration in the Tracked Pose Driver component causing bindings to clear when prefabs are used in some cases ([case ISXB-512](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-512), [case ISXB-521](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-521)).\n- Fixed Tracked Pose Driver to use `Transform.SetLocalPositionAndRotation` when available to improve performance. Based on the user contribution from [DevDunk](https://forum.unity.com/members/devdunk.4432119/) in a [forum post](https://forum.unity.com/threads/more-performant-tracked-pose-driver-solution-included.1462691).\n- Fixed the `Clone` methods of `InputAction` and `InputActionMap` so it copies the Initial State Check flag (`InputAction.wantsInitialStateCheck`) of input actions.\n- Fixed the \"Release tests throws exception in InputSystem\" bug ([case ISXB-581](https://issuetracker.unity3d.com/issues/release-tests-fail-when-input-system-package-is-installed)).\n- Fixed issues with generating Precompiled Layouts for devices which are not defined in a namespace\n- Fixed an issue where some controls like `QuaternionControl` could not be included in a Precompiled Layout because the generated code could not access a setter on child control properties."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"2884559d44178f24851e34d72f68fad583427ed1"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"e29989176f3a8473ba30854e4bfae953083eba28"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.7/manual/index.html","name":"com.unity.inputsystem","version":"1.7.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"a74895ba94362b3b9255c9cc3828ee44c4eafcc3","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.7.0.tgz"}},"1.6.3":{"_upm":{"changelog":"### Fixed\n- Fixed warning in USS file"},"type":"assets","unity":"2019.4","upmCi":{"footprint":"29e89ec08544ed9dbf10b1b04fce0bd41a18a3d0"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"0d0891efc00ce912af6f03974eac0b8afd20a8ac"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.6/manual/index.html","name":"com.unity.inputsystem","version":"1.6.3","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"69bf537b86b5ba90b7a2c42574da93822a46a17e","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.6.3.tgz"}},"1.6.1":{"_upm":{"changelog":"### Fixed\n- Fixed issue with compiling in Unity 2022.1 and with XR Toolkit by guarding the experimental UITK Asset Editor code completely."},"type":"asset","unity":"2019.4","upmCi":{"footprint":"32b525c35b166343b19e496f1432c6d50bcd5637"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"6e8cbe050db664506f3400e4d0735f9e4b604915"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.6/manual/index.html","name":"com.unity.inputsystem","version":"1.6.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"5fa9a09ca8147d3ec76a81cada563823be5b0554","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.6.1.tgz"}},"1.5.1":{"_upm":{"changelog":"### Fixed\n- Fixed unclosed profiler marker in `InvokeCallbacksSafe_AnyCallbackReturnsTrue` which would lead to eventually broken profiler traces in some cases like using `PlayerInput` (case ISXB-393).\n- Fixed InputAction.bindings.count not getting correctly updated after removing bindings with Erase().\n- Fixed an issue where connecting a gamepad in the editor with certain settings will cause memory and performance to degrade ([case UUM-19480](https://issuetracker.unity3d.com/product/unity/issues/guid/UUM-19480)).\n- Fixed issue leading to a stack overflow crash during device initialization in `InsertControlBitRangeNode` (case ISXB-405).\n- Fixed the issue where saving and loading override bindings to JSON would set unassigned overrides (that were `null`) to assigned overrides (as an empty string `\"\"`)."},"type":"asset","unity":"2019.4","upmCi":{"footprint":"2cae0097d3dad2d9ef12e11b093eb6055682b135"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"3062b2c3402b5f7f435d79acbd6011a621bfeb3e"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.5/manual/index.html","name":"com.unity.inputsystem","version":"1.5.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"4d60ed97a73ba7cd4cc68353d6ab02489e99d731","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.5.1.tgz"}},"1.5.0":{"_upm":{"changelog":"### Added\n- Added support for reading Tracking State in [TrackedPoseDriver](xref:UnityEngine.InputSystem.XR.TrackedPoseDriver) to constrain whether the input pose is applied to the Transform. This should be used when the device supports valid flags for the position and rotation values, which is the case for XR poses.\n- Added `InputSettings.shortcutKeysConsumeInput`. This allows programmatic access to opt-in to the enhanced shortcut key behaviour ([case ISXB-254](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-254))).\n- Significantly optimized cost of `ReadValue`/`ReadUnprocessedValueFromState`/`WriteValueIntoState` for some control types. Optimization is opt-in for now, please call `InputSystem.settings.SetInternalFeatureFlag(\"USE_OPTIMIZED_CONTROLS\", true);` in your project to enable it. You can observe which controls are optimized by looking at new optimized column in device debugger. You will need to call a new `InputControl.ApplyParameterChanges()` method if the code is changing `AxisControl` fields after initial setup is done.\n- Added the ability to change the origin positioning and movement behaviour of the OnScreenStick (`OnScreenStick.cs`) via the new `behaviour` property. This currently supports three modes of operation, two of which are new in addition to the previous behaviour. Based on the user contribution from [eblabs](https://github.com/eblabs) in [#658](https://github.com/Unity-Technologies/InputSystem/pull/658).\n- Significantly optimized cost of `InputAction.ReadValue` and `InputControl.ReadValue` calls by introducing caching behaviour to input controls. Input controls now keep track of whether their underlying state has been changed and only read the value from the underlying state and apply processors when absolutely necessary. Optimization is opt-in for now, please call `InputSystem.settings.SetInternalFeatureFlag(\"USE_READ_VALUE_CACHING\", true);` in your project to enable it. If there are issues try enabling `InputSystem.settings.SetInternalFeatureFlag(\"PARANOID_READ_VALUE_CACHING_CHECKS\", true);` and check in the console if there are any errors regarding caching.\n- Added a note in the [supported devices page](Documentation~/SupportedDevices.md) about DualSense support for Android devices.\n- Exposed `displayIndex` property for `Pointer`, `Touchscreen`, `TouchControl`, `TouchState`, `Mouse`, `MouseState` which enables look up of the logical screen associated with a pointer event via (display documentation)[https://docs.unity3d.com/ScriptReference/Display.html]\n\n### Fixed\n- Fixed composite bindings incorrectly getting a control scheme assigned when pasting into input asset editor with a control scheme selected.\n- Fixed an issue on PS5 where device disconnected events that happen while the app is in the background are missed causing orphaned devices to hang around forever and exceptions when the same device is added again ([case UUM-7842](https://issuetracker.unity3d.com/product/unity/issues/guid/UUM-6744)).\n- Fixed Switch Pro, DualShock 4, DualSense gamepads becoming current on PC/macOS when no controls are changing ([case ISXB-223](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-223))).\n- Fixed an issue that made OnScreenStick unusable when used in conjunction with PlayerInput in Auto-Switch devices mode, or with any code that changes user/device pairing on unsued device activity being detected ([case ISXB-48](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-48)).\n- Fixed issue where input events were being suppressed during interactive action rebinding even when when their controls were excluded ([case ISXB-367](https://issuetracker.unity3d.com/issues/mouse-position-and-mouse-click-input-not-recognized-when-rebinding-is-active)).\n- Removed unneeded check that could trigger a NotImplementedException when binding to a Usage (e.g. Submit) ([case ISXB-373](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-373)).\n- Display a warning instead of throwing a NotImplementedException when loading binding overrides from json when some of the entries have become outdated ([case ISXB-375](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-375)).\n\n### Actions\n- Extended input action code generator (`InputActionCodeGenerator.cs`) to support optional registration and unregistration of callbacks for multiple callback instances via `AddCallbacks(...)` and `RemoveCallbacks(...)` part of the generated code. Contribution by [Ramobo](https://github.com/Ramobo) in [#889](https://github.com/Unity-Technologies/InputSystem/pull/889).\n\n### Changed\n- Changed define requirements of `Unity.InputSystem.TestFramework`, so that it can be used by other packages without setting the `com.unity.inputsystem` package to be testable in the project manifest."},"type":"asset","unity":"2019.4","upmCi":{"footprint":"3b022697bf2c939fee671364f28690252d8a508b"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"eb5279b52c65b1ba176b373a6ebf170fbc564273"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.5/manual/index.html","name":"com.unity.inputsystem","version":"1.5.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"dbb40d6be5d859d2d7639c84c3e12e691882ae16","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.5.0.tgz"}},"1.4.4":{"type":"asset","unity":"2019.4","upmCi":{"footprint":"d20d3853d26dd380a822266e07f495666772006b"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"59db7b7bcc31bad254947e3189e6ec125f67e3e7"},"name":"com.unity.inputsystem","version":"1.4.4","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"83aa299dbaf0385fd0c8333f82addfa83b76c013","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.4.tgz"}},"1.4.3":{"type":"asset","unity":"2019.4","upmCi":{"footprint":"089fdfd7a0f1792e18976a994a39577ade0be70b"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"4176ff70ca01b934b7818035a5727c07bcaabb0d"},"name":"com.unity.inputsystem","version":"1.4.3","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"5a596e1565a616ab3c63214b24bceb63dd8c7016","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.3.tgz"}},"1.4.2":{"type":"asset","unity":"2019.4","upmCi":{"footprint":"e160a343267e1e2f5c669cfac97fc992f6e44ea9"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"631623e8dc57356af6692b9ef7822333edf45f37"},"name":"com.unity.inputsystem","version":"1.4.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"cb751ab0a49873ebad5d7cbf3040ac50bc0515b2","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.2.tgz"}},"1.4.1":{"_id":"com.unity.inputsystem@1.4.1","_upm":{"changelog":"### Fixed\n- Fixed composite touchscreen controls were not firing an action if screen was touched before enabling the action ([case ISXB-98](https://jira.unity3d.com/browse/ISXB-98))."},"type":"asset","_from":"file:/tmp/com.unity.inputsystem@1.4.1-4cstmjp0.tgz","unity":"2019.4","upmCi":{"footprint":"ddd60d3a3d5ec729720179c0fbfefeec480eb64c"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"_resolved":"/tmp/com.unity.inputsystem@1.4.1-4cstmjp0.tgz","_integrity":"sha512-fszu0fPpfVFDRxUBLTyfDN9aaXsHn2e5ZeNHabgOujEH4LyLYJsXuxuOkrojGCxTCmv9w0lBtN8KZhDJKfIN0Q==","repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"640348c45464bc94b38877d83653512da2c90453"},"name":"com.unity.inputsystem","version":"1.4.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"4ce577b1f90a6b2224460858bad9fa339b57bcfd","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.1.tgz"}},"1.3.0":{"_id":"com.unity.inputsystem@1.3.0","type":"asset","_from":"file:com.unity.inputsystem-1.3.0.tgz","unity":"2019.4","upmCi":{"footprint":"9b3507e700a475d3fc7c6406be352fd3f6b2e8e9"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"_resolved":"/pkgprom/com.unity.inputsystem-1.3.0.tgz","_integrity":"sha512-jdtdzLim7p1jOpC3evBjmXKhVjiSyZ1oydaLe4r0fa+KpgZIJS5pnL33qQ/vyxokGxCRuAepcMrPPXniqSHnSw==","repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"76d3fd182183dff9e9793431de614fd1e69e363c"},"name":"com.unity.inputsystem","version":"1.3.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"6216fe44510b32854685d12c1d899c237b7674b6","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.3.0.tgz"}},"1.2.0":{"_id":"com.unity.inputsystem@1.2.0","type":"asset","_from":"file:com.unity.inputsystem-1.2.0.tgz","unity":"2019.4","upmCi":{"footprint":"0ea9728a1dafe047db812a3f54cc61ea0ebca53d"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"_resolved":"/pkgprom/com.unity.inputsystem-1.2.0.tgz","_integrity":"sha512-mAn03ry7B0JGMFyVIfsdTPGo1fheYRJrGK4c/Vt2IX8zKOtlL1thXYIIWUptOzMcYnjxbgLqa9RtNBKzAFha7Q==","repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"0343e557f75946cf6fad4be48dd10276d535f490"},"name":"com.unity.inputsystem","version":"1.2.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"b415a8f8c6358e524fbb5f3a2d8ff8ee40f71f3a","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.2.0.tgz"}},"1.1.1":{"_id":"com.unity.inputsystem@1.1.1","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.1.tgz","unity":"2019.4","upmCi":{"footprint":"cbe084ce957665142a26dc1b81a64d43806a9627"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"e1f0221c75ac8bcc0f4d82e8eba6197ca3f9cf50"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"29ea715025c5878b7f9d5c5a2482bf848c87ebcc","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.1.tgz"}},"1.1.0-preview.3":{"_id":"com.unity.inputsystem@1.1.0-preview.3","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.0-preview.3.tgz","unity":"2019.4","upmCi":{"footprint":"61aa6b4ccd426575390a8b8286caade43ad92888"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"da76cf4dabba32fc554ef8b0a5bf9f0ebd3b3196"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.0-preview.3","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"e9d9ad83c77e9edbb1b20015dc12b9dbcaedaa34","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.3.tgz"}},"1.1.0-preview.2":{"_id":"com.unity.inputsystem@1.1.0-preview.2","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.0-preview.2.tgz","unity":"2019.4","upmCi":{"footprint":"5539ad9ab49e931c6f13e74068ba62a2d4108707"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"0a2e59083e312828fc806169de949cbb518327e5"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.0-preview.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"94cd6165bba6a51fafaef8e20d96ff6c81814977","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.2.tgz"}},"1.1.0-preview.1":{"_id":"com.unity.inputsystem@1.1.0-preview.1","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.0-preview.1.tgz","unity":"2019.4","upmCi":{"footprint":"58bb702704619948c5a51800b7c20122a12d413e"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"eea5e3fef64465fe0af6252eb2b931b6c82c680e"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.0-preview.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"bec9c0e27ed13c14d6e1f9fe84a64ace959cebbe","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.1.tgz"}},"1.1.0-pre.6":{"_id":"com.unity.inputsystem@1.1.0-pre.6","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.0-pre.6.tgz","unity":"2019.4","upmCi":{"footprint":"452b473986aaa3ef7cfae5a7b951e66c28223026"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"4c7b1dad3c6ad5941f485eec093467c7b14e3bf6"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.0-pre.6","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"4c4b3cc383f333c78d60810a44ad05c5b13bf659","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-pre.6.tgz"}},"1.1.0-pre.5":{"_id":"com.unity.inputsystem@1.1.0-pre.5","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.1.0-pre.5.tgz","unity":"2019.4","upmCi":{"footprint":"3e703941c068e66427af80770640196a905fdd4a"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"235baf96acbccfbca3f8e6543cc535d861c20db4"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.1.0-pre.5","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"f1ed0a1b58693a28d95aa9060acd7918d2adc50a","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-pre.5.tgz"}},"1.10.0":{"_upm":{"changelog":"### Fixed\n- Fixed default scroll speed in uGUI being slower than before. [ISXB-766](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-766)\n- Fixed an issue when multiple interactions drive an action and perform during the cancelation of the current active interaction [ISXB-310](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-310).\n- Fixed an issue when generating C# class of Input Actions that contain an action map named `Debug` [ISXB-851](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-851).\n- Fixed ArgumentNullException thrown when accessing Action's bindings after changing Composite part. [ISXB-494](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-494).\n\n### Added\n- Added `InputSystemUIInputModule.scrollDeltaPerTick` property, a customizable multiplicative factor applied to the scroll wheel speed before it is sent to UI components. Note that this has no effect on UI Toolkit content, only uGUI."},"type":"assets","unity":"2019.4","upmCi":{"footprint":"d359f03e30761b4981ac9e93877fd3147f94023f"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/UIvsGameInput","description":"An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.","displayName":"UI vs. Game Input"},{"path":"Samples~/UnityRemote","description":"An example with a simple scene for trying out the Unity Remote app.","displayName":"Unity Remote"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"4d0196dad0c0e030ab258312117a90f278166c1a"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.inputsystem@1.10/manual/index.html","name":"com.unity.inputsystem","version":"1.10.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.modules.uielements":"1.0.0"},"dist":{"shasum":"22df36f363344fad11b20c6365dcee2783c42dce","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.10.0.tgz"}},"1.0.2":{"_id":"com.unity.inputsystem@1.0.2","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","unity":"2019.1","upmCi":{"footprint":"16cf76fdb147ffbf6809fd1ff7d082bb6275010d"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"041def76515febb36a83d1f928cfb7aefb85176c"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"db9419f042ac68e1d1669aa4f0b76e2b7c764471","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.2.tgz"}},"1.0.1":{"_id":"com.unity.inputsystem@1.0.1","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","unity":"2019.1","upmCi":{"footprint":"59f8f6035ad641493f6a0c986a495cb248b48f08"},"samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"f757ff8ed7383896d71a608a755c1c39373cf4c8"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"e24bc2a627e4377f90708e8be469b54cdef883aa","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.1.tgz"}},"1.0.0-preview.7":{"_id":"com.unity.inputsystem@1.0.0-preview.7","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.0.0-preview.7.tgz","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"dc14c49beb7e3577bbf5f731cc0244cfe70b17a3","footprint":"ed04a58c1789ae2f34a9d29017aee30604fb1e32"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.0-preview.7","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"32a47d967af6901daef0370aca306bd2d6afe836","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.7.tgz"}},"1.0.0-preview.6":{"_id":"com.unity.inputsystem@1.0.0-preview.6","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.0.0-preview.6.tgz","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/EditorWindowDemo","description":"A simple example of how to use the input system from within EditorWindow code.","displayName":"EditorWindow Demo"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"7320077bdaa48fb7d63edaa66a246694a96a6bb7","footprint":"c0e72206c968a3983f445711b4cca00b8e98f91c"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.0-preview.6","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"990095fc67530e7457101c431889d4142f9e80dc","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.6.tgz"}},"1.0.0-preview.5":{"_id":"com.unity.inputsystem@1.0.0-preview.5","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.0.0-preview.5.tgz","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/EditorWindowDemo","description":"A simple example of how to use the input system from within EditorWindow code.","displayName":"EditorWindow Demo"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"8f61b4ba7176b0241f868bad0c3bac631e8d8b25","footprint":"eef2edc406261cf6293acd8e69b61f92cc61eae7"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.0-preview.5","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"19308b558640f970181739c69dac844a756a40f3","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.5.tgz"}},"1.0.0-preview.4":{"_id":"com.unity.inputsystem@1.0.0-preview.4","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"file:com.unity.inputsystem-1.0.0-preview.4.tgz","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/EditorWindowDemo","description":"A simple example of how to use the input system from within EditorWindow code.","displayName":"EditorWindow Demo"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"175eee8e35e0d808ac0decdc8c21e7f0cc708cd1"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.0-preview.4","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"5d0630f0447f1a53ebcdcf95ffd05a5f5dadb2f7","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.4.tgz"}},"1.0.0-preview.3":{"_id":"com.unity.inputsystem@1.0.0-preview.3","type":"asset","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/EditorWindowDemo","description":"A simple example of how to use the input system from within EditorWindow code.","displayName":"EditorWindow Demo"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"1a22faf98a0be83d8d0df97935b6ceea6835ae2f"},"name":"com.unity.inputsystem","version":"1.0.0-preview.3","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"bc9da2486f1fadaadc594c330893010ac7faab07","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.3.tgz"}},"1.0.0-preview.2":{"_id":"com.unity.inputsystem@1.0.0-preview.2","type":"asset","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/EditorWindowDemo","description":"A simple example of how to use the input system from within EditorWindow code.","displayName":"EditorWindow Demo"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"aacd1d924d46ee53751d6bbae6a6c200a8cfb535"},"name":"com.unity.inputsystem","version":"1.0.0-preview.2","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"4709f3c25fb7b5d6166d3b0122ed7ea645e77c21","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.2.tgz"}},"1.0.0-preview.1":{"_id":"com.unity.inputsystem@1.0.0-preview.1","type":"asset","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"e36044f3f26faeea8580d08ecf14ead1d72d8a49"},"name":"com.unity.inputsystem","version":"1.0.0-preview.1","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"ea4c648cce23c512b607a2f22e9debc9e0b5cfd0","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.1.tgz"}},"1.0.0-preview":{"_id":"com.unity.inputsystem@1.0.0-preview","unity":"2019.1","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"3a5d7d44a448dd2c0724778bb763f7d85c40e5e0"},"name":"com.unity.inputsystem","version":"1.0.0-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"640f7291b80b8bc5a69e867145291471c73b0e6e","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.tgz"}},"1.0.0":{"_id":"com.unity.inputsystem@1.0.0","bugs":{"url":"https://github.com/Unity-Technologies/InputSystem/issues"},"type":"asset","_from":"../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.inputsystem-1.0.0.tgz","unity":"2019.1","upmCi":{"footprint":"f6129c6fd91afee16e3739ad949e5e38c7bd908e"},"_shasum":"30174349065dc51b67bd08dcf6178b84bd5f10e4","samples":[{"path":"Samples~/CustomComposite","description":"Shows how to implement a custom composite binding.","displayName":"Custom Binding Composite"},{"path":"Samples~/CustomDevice","description":"Shows how to implement a custom input device.","displayName":"Custom Device"},{"path":"Samples~/CustomDeviceUsages","description":"Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').","displayName":"Custom Device Usages"},{"path":"Samples~/GamepadMouseCursor","description":"An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.","displayName":"Gamepad Mouse Cursor"},{"path":"Samples~/InGameHints","description":"Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.","displayName":"In-Game Hints"},{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/InputRecorder","description":"Shows how to capture and replay input events. Also useful by itself to debug input event sequences.","displayName":"Input Recorder"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls"},{"path":"Samples~/RebindingUI","description":"An example UI component that demonstrates how to create UI for rebinding actions.","displayName":"Rebinding UI"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"Simple Demo"},{"path":"Samples~/SimpleMultiplayer","description":"Demonstrates how to set up a simple local multiplayer scenario.","displayName":"Simple Multiplayer"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"homepage":"https://github.com/Unity-Technologies/InputSystem#readme","_resolved":"file:../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.inputsystem-1.0.0.tgz","repository":{"url":"git+https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"0617549352dbfae87698b044d343b97727dd6581"},"readmeFilename":"README.md","name":"com.unity.inputsystem","version":"1.0.0","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"30174349065dc51b67bd08dcf6178b84bd5f10e4","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0.tgz"}},"0.9.6-preview":{"_id":"com.unity.inputsystem@0.9.6-preview","unity":"2019.1","samples":[{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls Sample"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"SimpleDemo"},{"path":"Samples~/TanksDemo","description":"The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Tanks Demo"},{"path":"Samples~/TouchSamples","description":"A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.","displayName":"Touch Samples"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"883b5e1b72ce4371feb499a2f2370fcc6dc3dbf5"},"name":"com.unity.inputsystem","version":"0.9.6-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"dda272616914483e786ad557c321f706e45b5c60","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.6-preview.tgz"}},"0.9.5-preview":{"_id":"com.unity.inputsystem@0.9.5-preview","unity":"2019.1","samples":[{"path":"Samples~/InputDeviceTester","description":"A scene containing UI to visualize the controls on various supported input devices.","displayName":"InputDeviceTester"},{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls Sample"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"SimpleDemo"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"a37a3801e190d1eb2c871ee221ea08415cedfdd4"},"name":"com.unity.inputsystem","version":"0.9.5-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"7e77f8983bc511361e2ae8664d1de936ac07cf99","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.5-preview.tgz"}},"0.9.4-preview":{"_id":"com.unity.inputsystem@0.9.4-preview","unity":"2019.1","samples":[{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls Sample"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"SimpleDemo"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"2f9ca0aa7179c0d194f983341bc13da08d7fa2df"},"name":"com.unity.inputsystem","version":"0.9.4-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"e061065a9c6d4665de8aa74611e559139c3286f2","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.4-preview.tgz"}},"0.9.3-preview":{"_id":"com.unity.inputsystem@0.9.3-preview","unity":"2019.1","samples":[{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls Sample"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"SimpleDemo"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"0953592de295b4c9ed91e6e1a3dc26a9c2e227cf"},"name":"com.unity.inputsystem","version":"0.9.3-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"287e433d535ce36dd52c831c6e312803779e61bc","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.3-preview.tgz"}},"0.9.2-preview":{"_id":"com.unity.inputsystem@0.9.2-preview","unity":"2019.1","samples":[{"path":"Samples~/OnScreenControls","description":"Demonstrates a simple setup for an on-screen joystick.","displayName":"On-Screen Controls Sample"},{"path":"Samples~/SimpleDemo","description":"A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.","displayName":"SimpleDemo"},{"path":"Samples~/Visualizers","description":"Several example visualizations of input controls/devices and input actions.","displayName":"Visualizers"}],"scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"5615a30e9c3ec24da2c44fa366eccd1c069fe9c1"},"name":"com.unity.inputsystem","version":"0.9.2-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"40ae4f1756791d0dcd9ef9c32269589d56c616f2","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.2-preview.tgz"}},"0.9.1-preview":{"_id":"com.unity.inputsystem@0.9.1-preview","unity":"2019.1","scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"3428d43073891c136bd5b31aae9c6b05c96cb6d2"},"name":"com.unity.inputsystem","version":"0.9.1-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"a27384a41f9147230856247383f63f13b1f836c6","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.1-preview.tgz"}},"0.9.0-preview":{"_id":"com.unity.inputsystem@0.9.0-preview","unity":"2019.1","scripts":{},"repository":{"url":"git@github.com:Unity-Technologies/InputSystem.git","type":"git","revision":"eb5b812b1324edb8aa51c9d2d7982e5fab1cbe66"},"name":"com.unity.inputsystem","version":"0.9.0-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"622fdc8c9eb120005b3fd25de5b446b9de2df07d","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.0-preview.tgz"}},"0.2.8-preview":{"_id":"com.unity.inputsystem@0.2.8-preview","unity":"2019.1","scripts":{},"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.2.8-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"7522e2ca1cad6ef43a8152bee1f5fd7732b66bbf","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.8-preview.tgz"}},"0.2.6-preview":{"_id":"com.unity.inputsystem@0.2.6-preview","unity":"2019.1","scripts":{},"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.2.6-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"efba903cc2a6f5aa32c6ab64352caf70075437a0","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.6-preview.tgz"}},"0.2.1-preview":{"_id":"com.unity.inputsystem@0.2.1-preview","unity":"2018.3","scripts":{},"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.2.1-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"e526a2cb90b368b4bcb8cc78d1984dcf09f4f077","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.1-preview.tgz"}},"0.2.10-preview":{"_id":"com.unity.inputsystem@0.2.10-preview","unity":"2019.1","scripts":{},"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.2.10-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{"com.unity.ugui":"1.0.0"},"dist":{"shasum":"616a1d401ebeb05b5f003a3dda3b8e40864eeb5f","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.10-preview.tgz"}},"0.2.0-preview":{"_id":"com.unity.inputsystem@0.2.0-preview","unity":"2018.3","scripts":{},"repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.2.0-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"cc78cc3a25f8806c00b9652ac9687c6a06aa55de","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.0-preview.tgz"}},"0.1.2-preview":{"_id":"com.unity.inputsystem@0.1.2-preview","unity":"2018.3","repository":{"url":"https://github.com/Unity-Technologies/InputSystem.git","type":"git","revision":"bdb556e64749c2dbd7218e31c080d48f3053388f"},"name":"com.unity.inputsystem","version":"0.1.2-preview","description":"A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.","displayName":"Input System","keywords":["input","events","keyboard","mouse","gamepad","touch","vr","xr"],"dependencies":{},"dist":{"shasum":"e2d2d6f99389324b3dafffd176699791a45660c9","tarball":"https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.1.2-preview.tgz"}}},"etag":"\"2e276-mMVNMLt1cN6dfi5DNdfGbGvu9Lc\"","time":{"1.9.0":"2024-07-16T11:13:04.000Z","1.8.2":"2024-04-29T15:13:00.000Z","1.8.1":"2024-03-15T09:50:44.000Z","1.8.0-pre.2":"2023-11-10T15:02:53.000Z","1.8.0-pre.1":"2023-09-04T14:26:42.000Z","1.8.0":"2024-03-14T09:48:05.000Z","1.7.0":"2023-08-15T14:21:21.000Z","1.6.3":"2023-07-17T08:30:42.000Z","1.6.1":"2023-05-27T00:49:35.000Z","1.5.1":"2023-03-24T13:24:58.000Z","1.5.0":"2023-01-25T09:51:23.000Z","1.4.4":"2022-11-03T09:53:41.000Z","1.4.3":"2022-09-29T14:03:16.000Z","1.4.2":"2022-08-18T09:35:59.000Z","1.4.1":"2022-06-23T12:04:20.000Z","1.3.0":"2022-01-05T16:33:39.000Z","1.2.0":"2021-11-02T10:28:27.000Z","1.1.1":"2021-09-09T11:41:29.000Z","1.1.0-preview.3":"2021-02-05T14:15:46.000Z","1.1.0-preview.2":"2020-10-24T17:28:10.000Z","1.1.0-preview.1":"2020-08-20T17:26:57.000Z","1.1.0-pre.6":"2021-08-23T12:58:47.000Z","1.1.0-pre.5":"2021-05-14T19:32:27.000Z","1.10.0":"2024-07-25T12:19:54.000Z","1.0.2":"2021-01-21T17:57:01.000Z","1.0.1":"2020-11-24T15:59:11.000Z","1.0.0-preview.7":"2020-04-17T11:19:07.000Z","1.0.0-preview.6":"2020-03-06T20:29:34.000Z","1.0.0-preview.5":"2020-02-14T20:42:38.000Z","1.0.0-preview.4":"2020-01-24T10:41:06.000Z","1.0.0-preview.3":"2019-11-14T16:03:54.000Z","1.0.0-preview.2":"2019-11-04T15:02:58.000Z","1.0.0-preview.1":"2019-10-11T17:02:16.000Z","1.0.0-preview":"2019-09-20T19:02:08.000Z","1.0.0":"2020-04-29T19:48:10.000Z","0.9.6-preview":"2019-09-06T20:02:03.000Z","0.9.5-preview":"2019-08-29T19:01:59.000Z","0.9.4-preview":"2019-08-20T20:02:08.000Z","0.9.3-preview":"2019-08-15T19:02:03.000Z","0.9.2-preview":"2019-08-09T18:02:03.000Z","0.9.1-preview":"2019-08-08T21:01:58.000Z","0.9.0-preview":"2019-07-19T20:02:01.000Z","0.2.8-preview":"2019-04-23T22:01:23.000Z","0.2.6-preview":"2019-04-03T11:58:46.000Z","0.2.1-preview":"2019-04-03T11:58:43.000Z","0.2.10-preview":"2019-05-17T17:01:33.000Z","0.2.0-preview":"2019-04-03T11:58:41.000Z","0.1.2-preview":"2019-04-03T11:58:38.000Z"}}